//B.Кольцевая линия метро
// 
//Ограничение времени	1 секунда
//Ограничение памяти	64Mb
//Ввод	стандартный ввод или input.txt
//Вывод	стандартный вывод или output.txt
//Витя работает недалеко от одной из станций кольцевой линии Московского метро, а живет 
//рядом с другой станцией той же линии.Требуется выяснить, мимо какого наименьшего 
//количества промежуточных станций необходимо проехать Вите по кольцу, чтобы добраться
//с работы домой.
//
//Формат ввода
//Станции пронумерованы подряд натуральными числами 1, 2, 3, …, N(1 - я станция – соседняя с N - й), N не превосходит 100.
//
//Вводятся три числа : сначала N – общее количество станций кольцевой линии, а затем i и j – номера станции,
//на которой Витя садится, и станции, на которой он должен выйти.Числа i и j не совпадают.Все числа разделены пробелом.
//
//Формат вывода
//Требуется выдать минимальное количество промежуточных станций(не считая станции посадки и высадки), которые необходимо проехать Вите.
//
//Пример 1
//Ввод	Вывод
//100 5 6
//0
//Пример 2
//Ввод	Вывод
//10 1 9
//1
//Примечания
//Пояснения к примерам :
//
//1) На кольцевой линии 100 станций; проехать с 5 - й на 6 - ю станцию Витя может напрямую, без промежуточных станций
//
//2) На кольцевой линии 10 станций; проехать с 1 - й на 9 - ю станцию Витя может через одну промежуточную, ее номер 10

#include<iostream>
using namespace std;

int main() {
	int N, i, j;
	int sum1 = 0;
	int sum2 = 0;
	cin >> N >> i >> j;
	

		if (i < j) {
			sum1 = i - 1; //учтено все промежуточные станции до 1 включительно
			sum1 += N - j;
			sum2 = j - i - 1;
		}
		else {
			sum1 = j - 1; //учтено все промежуточные станции до 1 включительно
			sum1 += N - i;
			sum2 = i - j - 1;
		}
		cout << min(sum1, sum2);
	
	return 0;
}